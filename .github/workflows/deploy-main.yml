name: deploy-main

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh
          echo "$EC2_SSH_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

          cat >>~/.ssh/config <<END
          Host EC2
            HostName $EC2_HOST
            User $EC2_USER
            Port $EC2_PORT
            IdentityFile ~/.ssh/id_rsa
            StrictHostKeyChecking no
          END
        env:
          EC2_USER: time
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
          EC2_PORT: ${{ secrets.EC2_PORT }}

      - name: Copy Workspace
        run: |
          ssh EC2 'sudo mkdir -p /opt/app/time-attack'
          ssh EC2 'sudo chown time:tiger /opt/app/time-attack'
          scp -r ./[!.]* EC2:/opt/app/time-attack

      - name: Copy systemd service file
        run: |
          ssh EC2 '
            echo "[Unit]
            Description=Time-Attack
            After=network.target
            
            [Service]
            User=${USER}
            WrokingDirectory=/opt/app/time-attack
            ExecStart=sudo /usr/bin/docker build -t time-attack:BE .;sudo /usr/bin/docker rm -f time-attack-container;sudo /usr/bin/docker run -p 3000:3000 -p 9229:9229 --name time-attack-container time-attack:BE
            Restart=always

            [Install]
            WantedBy=multi-user.target" | sudo tee /etc/systemd/system/Time-Attack.service
          '

      - name: Enable systemd service
        run: |
          ssh EC2 'sudo systemctl daemon-reload'
          ssh EC2 'sudo systemctl enable Time-Attack'

      - name: Restart systemd service
        run: |
          ssh EC2 'sudo systemctl restart Time-Attack'
